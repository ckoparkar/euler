-- Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

-- Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
-- Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
-- Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
-- It can be verified that T285 = P165 = H143 = 40755.

-- Find the next triangle number that is also pentagonal and hexagonal.

-- Running time: 0.18 secs.

module P45 where
import P42 (triangles)
import  qualified Data.Set as Set

hexagonals :: [Integer]
hexagonals = [n*(2*n - 1) | n <- [1..]]

pentagonals :: [Integer]
pentagonals = [(n*(3*n - 1)) `quot` 2 | n <- [1..]]

m = head $ dropWhile (<= 40755) [t | t <- triangles, isPentagonal t, isHexagonal t]
  where isPentagonal = (`Set.member` Set.fromList (take 32000 pentagonals))
        isHexagonal = (`Set.member` Set.fromList (take 32000 hexagonals))
